// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messaging/request/request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Agrirouter.Request {

  /// <summary>Holder for reflection information generated from messaging/request/request.proto</summary>
  public static partial class RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for messaging/request/request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9tZXNzYWdpbmcvcmVxdWVzdC9yZXF1ZXN0LnByb3RvEhJhZ3Jpcm91dGVy",
            "LnJlcXVlc3QaGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aE2NvbW1vbnMvY2h1bmsucHJvdG8a",
            "FWNvbW1vbnMvbWVzc2FnZS5wcm90byKvAwoPUmVxdWVzdEVudmVsb3BlEh4K",
            "FmFwcGxpY2F0aW9uX21lc3NhZ2VfaWQYASABKAkSIgoaYXBwbGljYXRpb25f",
            "bWVzc2FnZV9zZXFfbm8YAiABKAMSHgoWdGVjaG5pY2FsX21lc3NhZ2VfdHlw",
            "ZRgDIAEoCRIbChN0ZWFtX3NldF9jb250ZXh0X2lkGAQgASgJEjYKBG1vZGUY",
            "BSABKA4yKC5hZ3Jpcm91dGVyLnJlcXVlc3QuUmVxdWVzdEVudmVsb3BlLk1v",
            "ZGUSEgoKcmVjaXBpZW50cxgGIAMoCRI2CgpjaHVua19pbmZvGAcgASgLMiIu",
            "YWdyaXJvdXRlci5jb21tb25zLkNodW5rQ29tcG9uZW50Ei0KCXRpbWVzdGFt",
            "cBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoIbWV0YWRh",
            "dGEYCSABKAsyHC5hZ3Jpcm91dGVyLmNvbW1vbnMuTWV0YWRhdGEiOAoETW9k",
            "ZRIKCgZESVJFQ1QQABILCgdQVUJMSVNIEAESFwoTUFVCTElTSF9XSVRIX0RJ",
            "UkVDVBACIj4KFVJlcXVlc3RQYXlsb2FkV3JhcHBlchIlCgdkZXRhaWxzGAEg",
            "ASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Agrirouter.Commons.ChunkReflection.Descriptor, global::Agrirouter.Commons.MessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Agrirouter.Request.RequestEnvelope), global::Agrirouter.Request.RequestEnvelope.Parser, new[]{ "ApplicationMessageId", "ApplicationMessageSeqNo", "TechnicalMessageType", "TeamSetContextId", "Mode", "Recipients", "ChunkInfo", "Timestamp", "Metadata" }, null, new[]{ typeof(global::Agrirouter.Request.RequestEnvelope.Types.Mode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Agrirouter.Request.RequestPayloadWrapper), global::Agrirouter.Request.RequestPayloadWrapper.Parser, new[]{ "Details" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestEnvelope : pb::IMessage<RequestEnvelope> {
    private static readonly pb::MessageParser<RequestEnvelope> _parser = new pb::MessageParser<RequestEnvelope>(() => new RequestEnvelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestEnvelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Agrirouter.Request.RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestEnvelope(RequestEnvelope other) : this() {
      applicationMessageId_ = other.applicationMessageId_;
      applicationMessageSeqNo_ = other.applicationMessageSeqNo_;
      technicalMessageType_ = other.technicalMessageType_;
      teamSetContextId_ = other.teamSetContextId_;
      mode_ = other.mode_;
      recipients_ = other.recipients_.Clone();
      chunkInfo_ = other.chunkInfo_ != null ? other.chunkInfo_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestEnvelope Clone() {
      return new RequestEnvelope(this);
    }

    /// <summary>Field number for the "application_message_id" field.</summary>
    public const int ApplicationMessageIdFieldNumber = 1;
    private string applicationMessageId_ = "";
    /// <summary>
    /// Client generated Message ID it would use to uniquly identify the message it is sending
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationMessageId {
      get { return applicationMessageId_; }
      set {
        applicationMessageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_message_seq_no" field.</summary>
    public const int ApplicationMessageSeqNoFieldNumber = 2;
    private long applicationMessageSeqNo_;
    /// <summary>
    /// Sequence Number from the client indicating the order in which it has sent messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ApplicationMessageSeqNo {
      get { return applicationMessageSeqNo_; }
      set {
        applicationMessageSeqNo_ = value;
      }
    }

    /// <summary>Field number for the "technical_message_type" field.</summary>
    public const int TechnicalMessageTypeFieldNumber = 3;
    private string technicalMessageType_ = "";
    /// <summary>
    /// agrirouter technical message type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TechnicalMessageType {
      get { return technicalMessageType_; }
      set {
        technicalMessageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team_set_context_id" field.</summary>
    public const int TeamSetContextIdFieldNumber = 4;
    private string teamSetContextId_ = "";
    /// <summary>
    /// If this message is in reference to a team-set context the ID would be placed here
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamSetContextId {
      get { return teamSetContextId_; }
      set {
        teamSetContextId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 5;
    private global::Agrirouter.Request.RequestEnvelope.Types.Mode mode_ = global::Agrirouter.Request.RequestEnvelope.Types.Mode.Direct;
    /// <summary>
    /// The sending mode so the agrirouter can properly process the message.     
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Agrirouter.Request.RequestEnvelope.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "recipients" field.</summary>
    public const int RecipientsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_recipients_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> recipients_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Directly Addressed agrirouter Endpoint ID's
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Recipients {
      get { return recipients_; }
    }

    /// <summary>Field number for the "chunk_info" field.</summary>
    public const int ChunkInfoFieldNumber = 7;
    private global::Agrirouter.Commons.ChunkComponent chunkInfo_;
    /// <summary>
    /// If this is part of a chunked message details are here
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Agrirouter.Commons.ChunkComponent ChunkInfo {
      get { return chunkInfo_; }
      set {
        chunkInfo_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Client generated UTC Timestamp at which the client sent the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 9;
    private global::Agrirouter.Commons.Metadata metadata_;
    /// <summary>
    /// Additional metadata information to help differentiate between messages of the same type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Agrirouter.Commons.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestEnvelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationMessageId != other.ApplicationMessageId) return false;
      if (ApplicationMessageSeqNo != other.ApplicationMessageSeqNo) return false;
      if (TechnicalMessageType != other.TechnicalMessageType) return false;
      if (TeamSetContextId != other.TeamSetContextId) return false;
      if (Mode != other.Mode) return false;
      if(!recipients_.Equals(other.recipients_)) return false;
      if (!object.Equals(ChunkInfo, other.ChunkInfo)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationMessageId.Length != 0) hash ^= ApplicationMessageId.GetHashCode();
      if (ApplicationMessageSeqNo != 0L) hash ^= ApplicationMessageSeqNo.GetHashCode();
      if (TechnicalMessageType.Length != 0) hash ^= TechnicalMessageType.GetHashCode();
      if (TeamSetContextId.Length != 0) hash ^= TeamSetContextId.GetHashCode();
      if (Mode != global::Agrirouter.Request.RequestEnvelope.Types.Mode.Direct) hash ^= Mode.GetHashCode();
      hash ^= recipients_.GetHashCode();
      if (chunkInfo_ != null) hash ^= ChunkInfo.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationMessageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ApplicationMessageId);
      }
      if (ApplicationMessageSeqNo != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ApplicationMessageSeqNo);
      }
      if (TechnicalMessageType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TechnicalMessageType);
      }
      if (TeamSetContextId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TeamSetContextId);
      }
      if (Mode != global::Agrirouter.Request.RequestEnvelope.Types.Mode.Direct) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Mode);
      }
      recipients_.WriteTo(output, _repeated_recipients_codec);
      if (chunkInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ChunkInfo);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Timestamp);
      }
      if (metadata_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationMessageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationMessageId);
      }
      if (ApplicationMessageSeqNo != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ApplicationMessageSeqNo);
      }
      if (TechnicalMessageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TechnicalMessageType);
      }
      if (TeamSetContextId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamSetContextId);
      }
      if (Mode != global::Agrirouter.Request.RequestEnvelope.Types.Mode.Direct) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      size += recipients_.CalculateSize(_repeated_recipients_codec);
      if (chunkInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChunkInfo);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestEnvelope other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationMessageId.Length != 0) {
        ApplicationMessageId = other.ApplicationMessageId;
      }
      if (other.ApplicationMessageSeqNo != 0L) {
        ApplicationMessageSeqNo = other.ApplicationMessageSeqNo;
      }
      if (other.TechnicalMessageType.Length != 0) {
        TechnicalMessageType = other.TechnicalMessageType;
      }
      if (other.TeamSetContextId.Length != 0) {
        TeamSetContextId = other.TeamSetContextId;
      }
      if (other.Mode != global::Agrirouter.Request.RequestEnvelope.Types.Mode.Direct) {
        Mode = other.Mode;
      }
      recipients_.Add(other.recipients_);
      if (other.chunkInfo_ != null) {
        if (chunkInfo_ == null) {
          ChunkInfo = new global::Agrirouter.Commons.ChunkComponent();
        }
        ChunkInfo.MergeFrom(other.ChunkInfo);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Agrirouter.Commons.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ApplicationMessageId = input.ReadString();
            break;
          }
          case 16: {
            ApplicationMessageSeqNo = input.ReadInt64();
            break;
          }
          case 26: {
            TechnicalMessageType = input.ReadString();
            break;
          }
          case 34: {
            TeamSetContextId = input.ReadString();
            break;
          }
          case 40: {
            Mode = (global::Agrirouter.Request.RequestEnvelope.Types.Mode) input.ReadEnum();
            break;
          }
          case 50: {
            recipients_.AddEntriesFrom(input, _repeated_recipients_codec);
            break;
          }
          case 58: {
            if (chunkInfo_ == null) {
              ChunkInfo = new global::Agrirouter.Commons.ChunkComponent();
            }
            input.ReadMessage(ChunkInfo);
            break;
          }
          case 66: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 74: {
            if (metadata_ == null) {
              Metadata = new global::Agrirouter.Commons.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RequestEnvelope message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Mode {
        [pbr::OriginalName("DIRECT")] Direct = 0,
        [pbr::OriginalName("PUBLISH")] Publish = 1,
        [pbr::OriginalName("PUBLISH_WITH_DIRECT")] PublishWithDirect = 2,
      }

    }
    #endregion

  }

  public sealed partial class RequestPayloadWrapper : pb::IMessage<RequestPayloadWrapper> {
    private static readonly pb::MessageParser<RequestPayloadWrapper> _parser = new pb::MessageParser<RequestPayloadWrapper>(() => new RequestPayloadWrapper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPayloadWrapper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Agrirouter.Request.RequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPayloadWrapper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPayloadWrapper(RequestPayloadWrapper other) : this() {
      details_ = other.details_ != null ? other.details_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPayloadWrapper Clone() {
      return new RequestPayloadWrapper(this);
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any details_;
    /// <summary>
    /// Content relevant for the technical message type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPayloadWrapper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPayloadWrapper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Details, other.Details)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (details_ != null) hash ^= Details.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (details_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Details);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPayloadWrapper other) {
      if (other == null) {
        return;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Details.MergeFrom(other.Details);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (details_ == null) {
              Details = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Details);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
