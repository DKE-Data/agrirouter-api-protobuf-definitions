// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: settings/dh-settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Agrirouter.Message.Settings {

  /// <summary>Holder for reflection information generated from settings/dh-settings.proto</summary>
  public static partial class DhSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for settings/dh-settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DhSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpzZXR0aW5ncy9kaC1zZXR0aW5ncy5wcm90bxIbYWdyaXJvdXRlci5tZXNz",
            "YWdlLnNldHRpbmdzIlIKFkRhdGFIdWJDb250cm9sU2V0dGluZ3MSGAoQbWF4",
            "X21lc3NhZ2Vfc2l6ZRgBIAEoBRIeChZtYXhfbWVzc2FnZXNfcGVyX3F1ZXJ5",
            "GAIgASgFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Agrirouter.Message.Settings.DataHubControlSettings), global::Agrirouter.Message.Settings.DataHubControlSettings.Parser, new[]{ "MaxMessageSize", "MaxMessagesPerQuery" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Used to control application communications (Based on configuration options we have within the DH)
  /// </summary>
  public sealed partial class DataHubControlSettings : pb::IMessage<DataHubControlSettings> {
    private static readonly pb::MessageParser<DataHubControlSettings> _parser = new pb::MessageParser<DataHubControlSettings>(() => new DataHubControlSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataHubControlSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Agrirouter.Message.Settings.DhSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataHubControlSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataHubControlSettings(DataHubControlSettings other) : this() {
      maxMessageSize_ = other.maxMessageSize_;
      maxMessagesPerQuery_ = other.maxMessagesPerQuery_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataHubControlSettings Clone() {
      return new DataHubControlSettings(this);
    }

    /// <summary>Field number for the "max_message_size" field.</summary>
    public const int MaxMessageSizeFieldNumber = 1;
    private int maxMessageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxMessageSize {
      get { return maxMessageSize_; }
      set {
        maxMessageSize_ = value;
      }
    }

    /// <summary>Field number for the "max_messages_per_query" field.</summary>
    public const int MaxMessagesPerQueryFieldNumber = 2;
    private int maxMessagesPerQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxMessagesPerQuery {
      get { return maxMessagesPerQuery_; }
      set {
        maxMessagesPerQuery_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataHubControlSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataHubControlSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxMessageSize != other.MaxMessageSize) return false;
      if (MaxMessagesPerQuery != other.MaxMessagesPerQuery) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxMessageSize != 0) hash ^= MaxMessageSize.GetHashCode();
      if (MaxMessagesPerQuery != 0) hash ^= MaxMessagesPerQuery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxMessageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxMessageSize);
      }
      if (MaxMessagesPerQuery != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxMessagesPerQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxMessageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMessageSize);
      }
      if (MaxMessagesPerQuery != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMessagesPerQuery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataHubControlSettings other) {
      if (other == null) {
        return;
      }
      if (other.MaxMessageSize != 0) {
        MaxMessageSize = other.MaxMessageSize;
      }
      if (other.MaxMessagesPerQuery != 0) {
        MaxMessagesPerQuery = other.MaxMessagesPerQuery;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxMessageSize = input.ReadInt32();
            break;
          }
          case 16: {
            MaxMessagesPerQuery = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
